group 'io.github.jdiaz'
version '0.1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.2-5'
    ext.junit_platform_version = '1.0.0-M4'
    ext.spek_version = '1.1.2'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'http://dl.bintray.com/jetbrains/spek'}
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junit_platform_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'http://dl.bintray.com/jetbrains/spek'}
    jcenter()
}

sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions {
        apiVersion = "1.1"
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        apiVersion = "1.1"
        jvmTarget = "1.8"
    }
}

junitPlatform {
    filters {
        engines {
            include "spek"
        }
    }
    platformVersion = "$junit_platform_version"
}

test {
    testLogging {
        // Make sure output from
        // standard out or error is shown
        // in Gradle output.
        showStandardStreams = true
    }
}

afterEvaluate {
    def junitPlatformTestTask = tasks.getByName('junitPlatformTest')
    junitPlatformTestTask.systemProperty "yelpkey", System.getProperty("yelpkey")
}

dependencies {
    compile 'com.github.vjames19.kotlin-futures:kotlin-futures-jdk8:0.4.0'
    compile 'com.github.jkcclemens:khttp:-SNAPSHOT'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"

    testCompile "org.jetbrains.spek:spek-api:$spek_version"
    testCompile "org.amshove.kluent:kluent:1.23"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$spek_version"
    testCompile "org.junit.platform:junit-platform-launcher:$junit_platform_version"
}
